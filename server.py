import matplotlib
matplotlib.use('Agg')  # ‚úÖ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–≥–æ–ª–æ–≤—ã–π —Ä–µ–∂–∏–º, –±–µ–∑ Tkinter GUI

from flask import Flask, Response
import socket
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
import io

# ---------------- Flask Server ----------------
app = Flask(__name__)

UDP_IP = "0.0.0.0"
UDP_PORT = 12345

# UDP —Å–æ–∫–µ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç ESP32
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
sock.bind((UDP_IP, UDP_PORT))

partial_frame = []

def get_frame():
    """–ü–æ–ª—É—á–∞–µ—Ç UDP-–∫–∞–¥—Ä—ã –∏ —Ä–µ–Ω–¥–µ—Ä–∏—Ç —Ç–µ–ø–ª–æ–≤–∏–∑–æ—Ä –≤ PNG"""
    global partial_frame
    print("üü° Waiting for UDP frames from ESP32...")

    while True:
        data, _ = sock.recvfrom(1024)
        try:
            floats = list(map(float, data.decode().strip().split(",")))
            partial_frame.extend(floats)

            # –û–¥–∏–Ω –∫–∞–¥—Ä = 32 x 24 = 768 –ø–∏–∫—Å–µ–ª–µ–π
            if len(partial_frame) >= 768:
                frame = np.array(partial_frame[:768], dtype=np.float32).reshape((24, 32))
                partial_frame = partial_frame[768:]

                # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                fig, ax = plt.subplots(figsize=(4, 3))
                ax.axis('off')
                im = ax.imshow(frame, cmap="inferno", interpolation="nearest")
                fig.tight_layout(pad=0)

                # –†–µ–Ω–¥–µ—Ä–∏–º –≤ –±—É—Ñ–µ—Ä PNG
                buf = io.BytesIO()
                canvas = FigureCanvas(fig)
                canvas.print_png(buf)
                plt.close(fig)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ MJPEG –ø–æ—Ç–æ–∫
                yield (b'--frame\r\n'
                       b'Content-Type: image/png\r\n\r\n' + buf.getvalue() + b'\r\n')

        except Exception as e:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–ª–∏ –ø–æ—Ç–æ–∫–∞:", e)


@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return '''
    <html>
      <head><title>MLX90640 Thermal Stream</title></head>
      <body style="background:#000; color:#fff; text-align:center;">
        <h1>üî• MLX90640 Thermal Camera</h1>
        <img src="/video" style="width:512px; image-rendering:pixelated; border:3px solid #444;">
        <p>Streaming live from Jetson Nano</p>
      </body>
    </html>
    '''


@app.route('/video')
def video():
    """–û—Ç–¥–∞—ë—Ç MJPEG –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫"""
    return Response(get_frame(), mimetype='multipart/x-mixed-replace; boundary=frame')


if __name__ == '__main__':
    print("üü¢ Flask server started at: http://192.168.1.97:5000/")
    print("üì° Waiting for UDP packets on port 12345...")
    app.run(host='0.0.0.0', port=5000, threaded=True)
